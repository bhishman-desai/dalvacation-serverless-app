import jsonimport boto3from boto3.dynamodb.conditions import Key, Attrdef lambda_handler(event, context):    # Initialize DynamoDB client    dynamodb = boto3.resource('dynamodb')    table = dynamodb.Table('Rooms')    try:        body = json.loads(event['body'])        roomId = body['roomid']        update_expression = "set "        expression_attribute_values = {}        expression_attribute_names = {}        if 'type' in body:            update_expression += "#t = :t, "            expression_attribute_values[':t'] = body['type']            expression_attribute_names['#t'] = "type"        if 'features' in body:            update_expression += "#f = :f, "            expression_attribute_values[':f'] = body['features']            expression_attribute_names['#f'] = "features"        if 'price' in body:            update_expression += "#p = :p, "            expression_attribute_values[':p'] = body['price']            expression_attribute_names['#p'] = "price"        # Remove trailing comma and space        update_expression = update_expression.rstrip(', ')        table.update_item(            Key={'roomid': roomId},            UpdateExpression=update_expression,            ExpressionAttributeValues=expression_attribute_values,            ExpressionAttributeNames=expression_attribute_names,            ReturnValues="UPDATED_NEW"        )        return {            'statusCode': 200,            'body': json.dumps({'message': 'Room updated successfully'}),            'headers': {                'Content-Type': 'application/json'            }        }    except Exception as e:        return {            'statusCode': 500,            'body': json.dumps({'error': str(e)}),            'headers': {                'Content-Type': 'application/json'            }        }